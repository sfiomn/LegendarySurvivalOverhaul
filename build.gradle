buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = minecraft_version + '-' + release_version
group = 'sfiomn.legendarysurvivaloverhaul' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'legendarysurvivaloverhaul'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            args '--username', 'Armkath', '--userType', 'microsoft', '--accessToken', 'eyJraWQiOiJhYzg0YSIsImFsZyI6IkhTMjU2In0.eyJ4dWlkIjoiMjUzNTQxMjExMTgwMTc2NiIsImFnZyI6IkFkdWx0Iiwic3ViIjoiNTkzZmNlNDctN2IxOS00MjI3LWFjM2ItMThjZmQzODNjNWFjIiwiYXV0aCI6IlhCT1giLCJucyI6ImRlZmF1bHQiLCJyb2xlcyI6W10sImlzcyI6ImF1dGhlbnRpY2F0aW9uIiwiZmxhZ3MiOlsidHdvZmFjdG9yYXV0aCIsIm1pbmVjcmFmdF9uZXQiLCJtc2FtaWdyYXRpb25fc3RhZ2U0Iiwib3JkZXJzXzIwMjIiLCJtdWx0aXBsYXllciJdLCJwcm9maWxlcyI6eyJtYyI6IjVmNTU4NWFhLTUzNGEtNDU4OS05ZThlLWQ2YWUyMGUzNWEzOSJ9LCJwbGF0Zm9ybSI6IlVOS05PV04iLCJ5dWlkIjoiZWU5MmU4NTY2M2VkNTZlNTQ2NjRmMGRlYmI1YTYzYTYiLCJuYmYiOjE3MDY2MTc5MzYsImV4cCI6MTcwNjcwNDMzNiwiaWF0IjoxNzA2NjE3OTM2fQ.TnE8yy3NC6DZbBwzs0Cg3unIPIdCM7zuyJTWQvKntqI'

            mods {
                legendarysurvivaloverhaul {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                legendarysurvivaloverhaul {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'legendarysurvivaloverhaul', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                legendarysurvivaloverhaul {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // JEI repositories
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
    // Curseforge repository
	maven {
	   url = "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    // curios repository
    maven {
    	url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
	// Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
	// that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
	// The userdev artifact is a special name and will get all sorts of transformations applied to it.
	minecraft 'net.minecraftforge:forge:1.16.5-36.2.39'
	
	// External libraries.
	// These are REQUIRED for the mod to compile correctly and should not be removed.
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.8.2:api") // Curios API
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api") // JEI API
    compileOnly fg.deobf("curse.maven:SereneSeasons-291874:3894516") // Serene Seasons deobf

	// Runtime mods. These are primarily for testing and can be removed as necessary.
	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.8.2") // Curios
	runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}") // JEI
    runtimeOnly fg.deobf("curse.maven:SereneSeasons-291874:3894516") // Serene Seasons deobf
    // For more info...

    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
	   attributes([
		  "Specification-Title": "legendarysurvivaloverhaul",
		  "Specification-Vendor": "Sfiomn",  // Originally IceyGirl
		  "Specification-Version": release_version,  // yeah
		  "Implementation-Title": project.name,
		  "Implementation-Version": "${version}",
		  "Implementation-Vendor" :"Sfiomn",  // Originally IceyGirl
		  "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
	   ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
